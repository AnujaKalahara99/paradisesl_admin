import { ComponentLoader } from "adminjs";
import { getModelByName } from "@adminjs/prisma";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

const componentLoader = new ComponentLoader();

const Components = {
  Dashboard: componentLoader.add("Dashboard", "./components/Dashboard"),
  CustomPanel: componentLoader.add("CustomPanel", "./components/CustomPanel"),
};

const dashboardHandler = async () => {
  // Asynchronous code where you, e. g. fetch data from your database
  const statusCountsData = await prisma.visa_applications.groupBy({
    by: ["status"], // Group by the 'status' field
    _count: {
      status: true, // Count the number of records for each status
    },
  });
  const statusCounts = statusCountsData.map((e) => ({
    name: e.status,
    value: e._count.status,
  }));

  return { statusCounts };
};

export const adminOptions = {
  dashboard: {
    component: Components.Dashboard,
    handler: dashboardHandler,
  },

  pages: {
    customPanel: {
      label: "Custom Panel",
      component: Components.CustomPanel,
    },
  },
  componentLoader,
  resources: [
    {
      resource: {
        model: getModelByName("visa_applications"),
        client: prisma,
      },
    },
    {
      resource: {
        model: getModelByName("applicants"),
        client: prisma,
      },
    },
    {
      resource: {
        model: getModelByName("reviewers"),
        client: prisma,
      },
    },
    {
      resource: {
        model: getModelByName("application_status_history"),
        client: prisma,
      },
    },
    {
      resource: {
        model: getModelByName("security_alerts"),
        client: prisma,
      },
    },
    {
      resource: {
        model: getModelByName("visa_fees"),
        client: prisma,
      },
    },
    {
      resource: {
        model: getModelByName("rejection_reasons"),
        client: prisma,
      },
    },
  ],
  branding: {
    companyName: "Visa Application Admin",
    logo: "https://picsum.photos/200/300",
    softwareBrothers: false,
  },
};

// options: {
//   parent: { name: "Database", icon: "Database" },
//   properties: {
//     id: {
//       isVisible: {
//         edit: false,
//         show: false,
//         list: false,
//         filter: false,
//       }, // Hide ID as it's autogenerated
//     },
//     applicant: {
//       isTitle: true, // Sets this field as the title in the list view
//       type: "string", // Ensures a text field for the applicant's name
//     },
//     status: {
//       availableValues: [
//         { value: "Pending", label: "Pending" },
//         { value: "Approved", label: "Approved" },
//         { value: "Rejected", label: "Rejected" },
//       ], // Dropdown for status selection
//     },
//     createdAt: {
//       isVisible: { edit: false, show: true, list: true, filter: true }, // Hide from the form, show in other views
//     },
//     updatedAt: {
//       isVisible: { edit: false, show: true, list: true, filter: true }, // Hide from the form, show in other views
//     },
//   },
// },
